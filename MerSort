#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
void Merge(int arr[], int l, int mid, int r) {
    int i = l;              // vị trí bắt đầu của mảng con trái
    int j = mid + 1;        // vị trí bắt đầu của mảng con phải
    int size = r - l + 1;   // số phần tử trong mảng kết quả
    int temp[size];         // mảng tạm, dùng để lưu kết quả trộn của 2 mảng con
    // với mỗi vị trí trong mảng kết quả, chọn phần tử nhỏ hơn trong 2 phần tử đầu của 2 mảng con để đặt vô vị trí đó
    for (int k = 0; k < size; k++) {
        if (i <= mid && (j > r || arr[i] < arr[j])) {
            temp[k] = arr[i];
            i++;
        }
        else {
            temp[k] = arr[j];
            j++;
        }
    }
    copy(temp, temp + size, arr + l); // copy mảng tạm sang mảng chính
}
/**
Hàm sắp xếp sử dụng MergeSort
Sắp xếp các phần tử của mảng arr từ vị trí l cho tới vị trí r
**/
void MergeSort(int arr[], int l, int r) {
    if (l<r) // không cần sắp xếp mảng có ít hơn 2 phần tử
    {
    int mid = (l + r) / 2;
    MergeSort(arr, l, mid  );       // mảng con trái là phần từ l -> mid
    MergeSort(arr, mid+1, r);       // mảng con phải là phần từ mid+1 -> r
    Merge(arr, l, mid, r);
    }
}

int main() {
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0 ; i<n ; i++)
    {
        cin>> arr[i];
        
    }
    MergeSort(arr,0,n-1);
    for(int i = 0 ; i<n ; i++)
    {
        cout<< arr[i] << " ";
    }
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    return 0;
}
